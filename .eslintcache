[{"C:\\Users\\evano\\source\\training-1\\my-app\\src\\index.js":"1","C:\\Users\\evano\\source\\training-1\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\evano\\source\\training-1\\my-app\\src\\App.js":"3","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\index.js":"4","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\Mainlayout.js":"5","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\Navbar.js":"6","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\MainLayout.js":"7","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\HomePage.js":"8","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\Test1.js":"9","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\Test2.js":"10","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\Test3.js":"11","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\LoginPage.js":"12","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\SignUpPage.js":"13","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\PrivateRoute.js":"14","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\SecurityContext.js":"15","C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\LandingPage.js":"16","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\LoginForm.js":"17","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Login.js":"18","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\CustomTable.js":"19","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Theme.js":"20"},{"size":500,"mtime":1609173454568,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1816,"mtime":1610460774985,"results":"24","hashOfConfig":"22"},{"size":249,"mtime":1608628082994,"results":"25","hashOfConfig":"22"},{"size":208,"mtime":1608627329844,"results":"26","hashOfConfig":"22"},{"size":7054,"mtime":1609174581335,"results":"27","hashOfConfig":"22"},{"size":233,"mtime":1609173526433,"results":"28","hashOfConfig":"22"},{"size":257,"mtime":1609256259912,"results":"29","hashOfConfig":"22"},{"size":124,"mtime":1608707003801,"results":"30","hashOfConfig":"22"},{"size":224,"mtime":1609943659387,"results":"31","hashOfConfig":"22"},{"size":124,"mtime":1608716676378,"results":"32","hashOfConfig":"22"},{"size":645,"mtime":1609255791695,"results":"33","hashOfConfig":"22"},{"size":134,"mtime":1608961214107,"results":"34","hashOfConfig":"22"},{"size":492,"mtime":1609158780410,"results":"35","hashOfConfig":"22"},{"size":91,"mtime":1609138263505,"results":"36","hashOfConfig":"22"},{"size":136,"mtime":1609137894515,"results":"37","hashOfConfig":"22"},{"size":7113,"mtime":1609943427366,"results":"38","hashOfConfig":"22"},{"size":990,"mtime":1609341541738,"results":"39","hashOfConfig":"22"},{"size":5083,"mtime":1609943423794,"results":"40","hashOfConfig":"22"},{"size":332,"mtime":1610462028333,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"16kz06w",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\evano\\source\\training-1\\my-app\\src\\index.js",[],["86","87"],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\App.js",["88"],"import React, {useState, useMemo} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {MainLayout} from './components/Layout';\nimport PrivateRoute from './components/PrivateRoute';\nimport HomePage from './pages/HomePage';\nimport Test1 from './pages/Test1';\nimport Test2 from './pages/Test2';\nimport Test3 from './pages/Test3';\nimport LoginPage from './pages/LoginPage';\nimport SignUpPage from './pages/SignUpPage';\nimport LandingPage from './pages/LandingPage';\nimport { SecurityContext } from './components/SecurityContext';\nimport { CssBaseline } from '@material-ui/core';\nimport {Theme} from './components/Theme';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const securityProviderObj = useMemo(()=>({user, setUser}), [user, setUser]);\n\n  return (\n    <React.Fragment>\n      <CssBaseline/>\n      <ThemeProvider theme = {Theme}>\n      <BrowserRouter>\n        <Switch>\n          <SecurityContext.Provider value={securityProviderObj}>\n\n            \n\n            <MainLayout>\n              <Route exact path=\"/\" component={LandingPage}/>\n              <Route exact path=\"/login\" component={LoginPage}/>\n              <Route exact path=\"/signup\" component={SignUpPage}/>\n              \n              \n              <PrivateRoute exact path=\"/home\" component={HomePage}/>\n              <PrivateRoute exact path=\"/Test1\" component={Test1}/>\n              <PrivateRoute exact path=\"/Test2\" component={Test2}/>\n              <PrivateRoute exact path=\"/Test3\" component={Test3}/>\n              \n            </MainLayout>\n          </SecurityContext.Provider>\n        </Switch>\n            \n          \n      </BrowserRouter>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\index.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\Mainlayout.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\Navbar.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Layout\\MainLayout.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\HomePage.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\Test1.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\Test2.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\Test3.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\LoginPage.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\SignUpPage.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\PrivateRoute.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\SecurityContext.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\pages\\LandingPage.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\LoginForm.js",["89","90","91","92","93"],"import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Login from './Login';\r\n//username\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport {SecurityContext} from './SecurityContext';\r\n//password\r\nimport clsx from 'clsx';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined';\r\n//login\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '26ch',\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n      },\r\n  }));\r\n\r\n    \r\nexport default function LoginForm() {\r\n    const classes = useStyles();\r\n\r\n    const {setUser} = useContext(SecurityContext);\r\n\r\n    const [values, setValues] = React.useState({\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        showPassword: false,\r\n        isLogin: true,\r\n        usernameMissing: false,\r\n        passwordMissing: false,\r\n        userNotFound: ''\r\n        \r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, \r\n          [prop]: event.target.value, \r\n          [prop+'Missing']: (event.target.value===\"\"?true:false)\r\n        });\r\n\r\n    };\r\n\r\n    const handleToggleOnOff = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: !values[prop]});\r\n        \r\n    };\r\n    \r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        //setUser({\"user\": values.username});\r\n        setValues({ ...values,\r\n          ['passwordMissing']: (values.password===\"\"?true:false), \r\n          ['usernameMissing']: (values.username===\"\"?true:false) });\r\n\r\n        if (values.username && values.password) {\r\n          console.log({ username: values.username, password: values.password });\r\n          Login('http://localhost:3000/api/login', { username: values.username, password: values.password })\r\n          .then(data => {\r\n             \r\n            setUser(data);\r\n          })\r\n          .catch(error => {\r\n            console.log('no user found');\r\n            setValues({...values, ['userNotFound']: 'Username and password not valid'})\r\n        });;\r\n        }\r\n        \r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        {/*username*/}\r\n        <div className={classes.margin}>\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <AccountCircle />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField \r\n              error={values.usernameMissing}\r\n              onChange={handleChange('username')} \r\n              className={clsx(classes.textField)} \r\n              id=\"input-with-icon-grid\" \r\n              label=\"Email\" />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/*password*/}\r\n        <div className={classes.margin}>\r\n          <Grid container spacing={1} alignItems=\"flex-end\">\r\n            <Grid item>\r\n              <VpnKeyOutlinedIcon />\r\n            </Grid>\r\n            <Grid item>\r\n                <FormControl className={clsx(classes.textField)}>\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                        <Input\r\n                            error={values.passwordMissing}\r\n                            id=\"standard-adornment-password\"\r\n                            type={values.showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleToggleOnOff('showPassword')}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        {/*Confirm password */}\r\n        {values.isLogin ? (null):(\r\n            <div className={classes.margin}>\r\n            <Grid container spacing={1} alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <VpnKeyOutlinedIcon aria-hidden=\"true\" />\r\n              </Grid>\r\n              <Grid item>\r\n                  <FormControl className={clsx(classes.textField)}>\r\n                      <InputLabel htmlFor=\"standard-adornment-password\">Confirm Password</InputLabel>\r\n                          <Input\r\n                              \r\n                              id=\"standard-adornment-password\"\r\n                              type='password'\r\n                              value={values.confirmPassword}\r\n                              onChange={handleChange('confirmPassword')}\r\n                              />\r\n                  </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n        {/*login + signup button*/}\r\n        \r\n        <Grid container direction=\"column\" spacing={1} alignItems=\"flex-end\">\r\n        <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"stretch\"\r\n        >\r\n            <Button onClick={()=>setValues({ ...values, ['isLogin']: true})} variant={values.isLogin?\"contained\":\"outlined\"} size=\"large\" color=\"primary\" className={classes.margin}>Log In</Button>\r\n            <Button onClick={()=>setValues({ ...values, ['isLogin']: false})} variant={values.isLogin?\"outlined\":\"contained\"} size=\"large\" color=\"primary\" className={classes.margin}>Sign Up</Button>\r\n        </Grid>\r\n        \r\n        <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-end\"\r\n            >\r\n            <Button onClick={handleSubmit}  size=\"large\" color=\"primary\" className={clsx(classes.textField, classes.margin)}>Submit</Button>\r\n        </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        \r\n       \r\n        \r\n        \r\n      \r\n        \r\n        \r\n      \r\n      \r\n    </div>\r\n\r\n\r\n        \r\n\r\n      \r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Login.js",[],"C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\CustomTable.js",["94"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// Icons\r\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\r\nimport DoneIcon from \"@material-ui/icons/DoneAllTwoTone\";\r\nimport RevertIcon from \"@material-ui/icons/NotInterestedOutlined\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n  selectTableCell: {\r\n    width: 60\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40\r\n  },\r\n  input: {\r\n    width: 130,\r\n    height: 40\r\n  }\r\n}));\r\n\r\nconst createData = (name, calories, fat, carbs, protein) => ({\r\n  id: name.replace(\" \", \"_\"),\r\n  name,\r\n  calories,\r\n  fat,\r\n  carbs,\r\n  protein,\r\n  isEditMode: false\r\n});\r\n\r\nconst CustomTableCell = ({ row, name, onChange }) => {\r\n  const classes = useStyles();\r\n  const { isEditMode } = row;\r\n  return (\r\n    <TableCell align=\"left\" className={classes.tableCell}>\r\n      {isEditMode ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          onChange={e => onChange(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default function CustomTable() {\r\n  const [rows, setRows] = React.useState([\r\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n    createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\r\n    createData(\"Eclair\", 262, 16.0, 24, 6.0)\r\n  ]);\r\n  const [previous, setPrevious] = React.useState({});\r\n  const classes = useStyles();\r\n\r\n  const onToggleEditMode = id => {\r\n    setRows(state => {\r\n      return rows.map(row => {\r\n        if (row.id === id) {\r\n          return { ...row, isEditMode: !row.isEditMode };\r\n        }\r\n        return row;\r\n      });\r\n    });\r\n  };\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.id]) {\r\n      setPrevious(state => ({ ...state, [row.id]: row }));\r\n    }\r\n    const value = e.target.value;\r\n    const name = e.target.name;\r\n    const { id } = row;\r\n    const newRows = rows.map(row => {\r\n      if (row.id === id) {\r\n        return { ...row, [name]: value };\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n  };\r\n\r\n  const onRevert = id => {\r\n    const newRows = rows.map(row => {\r\n      if (row.id === id) {\r\n        return previous[id] ? previous[id] : row;\r\n      }\r\n      return row;\r\n    });\r\n    setRows(newRows);\r\n    setPrevious(state => {\r\n      delete state[id];\r\n      return state;\r\n    });\r\n    onToggleEditMode(id);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>A barbone structure table example with a caption</caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\" />\r\n            <TableCell align=\"left\">Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"left\">Calories</TableCell>\r\n            <TableCell align=\"left\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"left\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"left\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map(row => (\r\n            <TableRow key={row.id}>\r\n              <TableCell className={classes.selectTableCell}>\r\n                {row.isEditMode ? (\r\n                  <>\r\n                    <IconButton\r\n                      aria-label=\"done\"\r\n                      onClick={() => onToggleEditMode(row.id)}\r\n                    >\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"revert\"\r\n                      onClick={() => onRevert(row.id)}\r\n                    >\r\n                      <RevertIcon />\r\n                    </IconButton>\r\n                  </>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => onToggleEditMode(row.id)}\r\n                  >\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                )}\r\n              </TableCell>\r\n              <CustomTableCell {...{ row, name: \"name\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"calories\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"fat\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"carbs\", onChange }} />\r\n              <CustomTableCell {...{ row, name: \"protein\", onChange }} />\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\evano\\source\\training-1\\my-app\\src\\components\\Theme.js",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":15,"column":10,"nodeType":"102","messageId":"103","endLine":15,"endColumn":24},{"ruleId":"104","severity":1,"message":"105","line":82,"column":11,"nodeType":"106","messageId":"107","endLine":82,"endColumn":65,"fix":"108"},{"ruleId":"104","severity":1,"message":"109","line":83,"column":11,"nodeType":"106","messageId":"107","endLine":83,"endColumn":65,"fix":"110"},{"ruleId":"104","severity":1,"message":"111","line":94,"column":35,"nodeType":"106","messageId":"107","endLine":94,"endColumn":86,"fix":"112"},{"ruleId":"104","severity":1,"message":"113","line":180,"column":57,"nodeType":"106","messageId":"107","endLine":180,"endColumn":74,"fix":"114"},{"ruleId":"104","severity":1,"message":"113","line":181,"column":57,"nodeType":"106","messageId":"107","endLine":181,"endColumn":75,"fix":"115"},{"ruleId":"100","severity":1,"message":"116","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"100","severity":1,"message":"117","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property ['passwordMissing'] found.","Property","unnecessarilyComputedProperty",{"range":"120","text":"121"},"Unnecessarily computed property ['usernameMissing'] found.",{"range":"122","text":"123"},"Unnecessarily computed property ['userNotFound'] found.",{"range":"124","text":"125"},"Unnecessarily computed property ['isLogin'] found.",{"range":"126","text":"127"},{"range":"128","text":"127"},"'ReactDOM' is defined but never used.","'purple' is defined but never used.","no-global-assign","no-unsafe-negation",[2286,2305],"'passwordMissing'",[2354,2373],"'usernameMissing'",[2849,2865],"'userNotFound'",[6290,6301],"'isLogin'",[6488,6499]]